// Generated by CoffeeScript 1.4.0

window.AUTOBIDDERS_LIST_ALL = "/autobidders_list_all";

window.AUTOBIDDERS_LIST_BY_AUCTION = "/autobidders_list_by_auction";

window.AUTOBIDDER_STATUS_BY_AUCTION = "/autobidder_status_by_auction";

window.AUCTIONS_LIST_CURRENT = "/auctions_list_current";

window.AUCTIONS_STATUS_BY_ID = "/auctions_status_by_id";

window.AUCTION_BID = "/auction_bid";

window.AUCTION_DETAIL = "/auction_detail";

window.AUCTION_RECENT_BIDS = "/auction_recent_bids";

window.AUCTION_ADD_PENDING_BIDS = "/auction_add_pending_bids";

window.AUCTION_GET_PENDING_BIDS_FOR_USER = "/auction_get_pending_bids_for_user";

window.AUCTION_CANCEL_PENDING_BIDS_FOR_USER = "/auction_cancel_pending_bids_for_user";

window.AUCTION_ADD_PENDING_BIDS_FOR_USER = "/auction_add_pending_bids_for_user";

window.AUCTION_REMOVE_PENDING_BIDS_FOR_USER = "/auction_remove_pending_bids_for_user";

window.USER_AUTHENTICATE = "/persona_login";

window.USER_USERNAME_EXISTS = "/user_username_exists";

window.USER_EMAIL_EXISTS = "/user_email_exists";

window.USER_INFO = "/user_info";

window.USER_LOGOUT = "/user_logout";

window.set_cookie = function(name, value, expiration_days) {
  var cookie_text, expiration_date, now;
  if (expiration_days == null) {
    expiration_days = 365;
  }
  now = new Date;
  expiration_date = new Date(now.getTime + (expiration_days * 86400000));
  cookie_text = "" + (escape(value)) + "; expires=" + expiration_date.toUTCString;
  return document.cookie = "" + name + "=" + cookie_text;
};

$(document).ready(function() {
  $.ajaxSetup({
    async: true,
    cache: false,
    type: "GET",
    beforeSend: function(xhr, settings) {},
    complete: function(xhr, status) {},
    error: function(xhr, status, error) {
      if (xmlObject.status === 0 || xhr.statusText === "abort") {
        return;
      }
      return showDialog("error", "Unexpected Error", error);
    }
  });
  return $("#messageDialog").dialog({
    autoOpen: false,
    modal: true,
    width: 300,
    height: 200,
    buttons: {
      Ok: function() {
        return $(this).dialog("close");
      }
    }
  });
});

window.user = {
  fetchingInfo: null,
  username: null,
  bids: null,
  autobidders: null,
  init: function(username) {
    this.username = username;
    return user.refresh();
  },
  refresh: function() {
    var fetchingInfo;
    if (fetchingInfo) {
      fetchingInfo.abort();
    }
    return fetchingInfo = jQuery.ajax({
      url: USER_INFO,
      data: {},
      success: function(data) {
        if (data.result) {
          window.user.bids = data.result['bids'];
          window.user.autobidders = data.result['auto-bidders'];
          window.user.update();
        }
        return window.user.fetchingInfo = null;
      }
    });
  },
  update: function() {
    $('#topbar-bids').text(window.user.bids);
    return $('#topbar-autobidders').text(window.user.autobidders);
  }
};

window.showDialog = function(dialogType, title, message) {
  var icon;
  icon = "info";
  switch (dialogType) {
    case "info":
      icon = "info";
      break;
    case "error":
      icon = "alert";
      break;
    default:
      icon = "info";
  }
  $("#messageDialog p").html("<span class='ui-icon ui-icon-" + icon + "' style='float:left; margin:0 7px 20px 0;'></span>" + message);
  $("#messageDialog").dialog({
    title: title
  });
  return $("#messageDialog").dialog("open");
};

window.padzero = function(number, length) {
  var str;
  str = "" + number;
  while (str.length < length) {
    str = "0" + str;
  }
  return str;
};

window.getCookie = function(c_name) {
  var ARRcookies, i, x, y;
  i = void 0;
  x = void 0;
  y = void 0;
  ARRcookies = document.cookie.split(";");
  i = 0;
  while (i < ARRcookies.length) {
    x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
    y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
    x = x.replace(/^\s+|\s+$/g, "");
    if (x === c_name) {
      return unescape(y);
    }
    i++;
  }
};

window.getParameterByName = function(name) {
  var regex, regexS, results;
  name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
  regexS = "[\\?&]" + name + "=([^&#]*)";
  regex = new RegExp(regexS);
  results = regex.exec(window.location.search);
  if (results == null) {
    return "";
  } else {
    return decodeURIComponent(results[1].replace(/\+/g, " "));
  }
};

window.secondsToHms = function(d) {
  var h, m, s;
  d = Number(d);
  h = Math.floor(d / 3600);
  m = Math.floor(d % 3600 / 60);
  s = Math.floor(d % 3600 % 60);
  return padzero(h, 2) + ":" + padzero(m, 2) + ":" + padzero(s, 2);
};

String.prototype.replaceAll = function(str1, str2, ignore) {
  return this.replace(new RegExp(str1.replace(/([\/\,\!\\\^\$\{\}\[\]\(\)\.\*\+\?\|\<\>\-\&])/g, "\\$&"), (ignore ? "gi" : "g")), (typeof str2 === "string" ? str2.replace(/\$/g, "$$$$") : str2));
};
